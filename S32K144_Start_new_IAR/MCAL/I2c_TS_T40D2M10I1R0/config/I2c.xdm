<?xml version='1.0'?>
<datamodel version="3.0"
           xmlns="http://www.tresos.de/_projects/DataModel2/08/root.xsd"
           xmlns:a="http://www.tresos.de/_projects/DataModel2/08/attribute.xsd"
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd"
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">
<!--
*   @file    I2c.xdm
*   @version 1.0.1
*
*   @brief   AUTOSAR I2c - Tresos Studio plugin schema file
*   @details This file contains the schema configuration for and I2c Tresos Studio plugin.
-->
<!--
====================================================================================================
*   Project              : AUTOSAR 4.2 MCAL
*   Platform             : ARM
*   Peripheral           : LPI2C
*   Dependencies         : none
*
*   Autosar Version      : 4.2.2
*   Autosar Revision     : ASR_REL_4_2_REV_0002
*   Autosar Conf.Variant :
*   SW Version           : 1.0.1
*   Build Version        : S32K14x_MCAL_1_0_1_RTM_ASR_REL_4_2_REV_0002_20180713

*   (c) Copyright 2006-2016 Freescale Semiconductor, Inc. 
*       Copyright 2017-2018 NXP
*   All Rights Reserved.
====================================================================================================
====================================================================================================
====================================================================================================
-->
    <d:ctr type="AUTOSAR" factory="autosar"
        xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd"
        xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd"
        xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd" >
        <d:lst type="TOP-LEVEL-PACKAGES">
            <!-- /** @implements  I2c_Object */ -->
            <d:ctr name="TS_T40D2M10I1R0" type="AR-PACKAGE">
                <a:a name="UUID" value="ECUC:5fe16860-10a9-42e8-ba32-129de4bf6ac4"/>
                <d:lst type="ELEMENTS">
                    <d:chc name="I2c" type="AR-ELEMENT" value="MODULE-DEF">
                        <v:ctr type="MODULE-DEF">
                            <a:a name="DESC">
                                <a:v>
                                    <![CDATA[EN:<html>
                                        Configuration of the Inter-integrated circuit (I2c) module.
                                    </html>]]>
                                </a:v>
                            </a:a>
                            <a:a name="LOWER-MULTIPLICITY" value="1" />
                            <a:a name="UPPER-MULTIPLICITY" value="1" />
                            <a:a name="RELEASE" value="asc:4.2"/>
                            <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                                <ad:ADMIN-DATA>
                                    <ad:LANGUAGE>EN</ad:LANGUAGE>
                                    <ad:DOC-REVISIONS>
                                        <ad:DOC-REVISION>
                                            <ad:REVISION-LABEL>1.0.1</ad:REVISION-LABEL>
                                            <ad:ISSUED-BY>NXP</ad:ISSUED-BY>
                                            <ad:DATE>2010-12-03</ad:DATE>
                                        </ad:DOC-REVISION>
                                    </ad:DOC-REVISIONS>
                                </ad:ADMIN-DATA>
                            </a:a>
                            <a:a name="POSTBUILDVARIANTSUPPORT" value="true"/> 
                            <a:a name="UUID" value="ECUC:b510368b-ff12-4d58-aaad-a5e9c1cb3e3b"/>

                            <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                                <a:a name="LABEL" value="Config Variant"/>
                                <a:a name="UUID" value="ECUC:e2d81221-d902-4f85-bd93-578fada9dc4f"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html>
                                            VariantPreCompile: Only precompile time configuration parameters. Only one set of parameters.<p/>
                                            VariantPostBuild: Mix of precompile and postbuild time configuration parameters. Only one set of parameters.<p/>
                                        </html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:da name="DEFAULT" value="VariantPostBuild"/>
                                <a:da name="RANGE">
                                    <a:v>VariantPostBuild</a:v>
                                    <a:v>VariantPreCompile</a:v>
                                </a:da>
                            </v:var>

                            <!-- @implements GeneralConfiguration_Object -->
                            <v:ctr name="GeneralConfiguration" type="IDENTIFIABLE">
                              <a:a name="UUID" value="ECUC:f9793957-805b-400b-921f-acc6f3289e14"/>
                              <a:a name="DESC">
                                  <a:v>
                                      <![CDATA[EN:
                                          <html>
                                              <p>GeneralConfiguration</p>
                                              <p>This container contains the global configuration parameters of the Non-Autosar I2c driver.</p>
                                              Note: Implementation Specific Parameter. <p/>
                                          </html>
                                      ]]>
                                  </a:v>
                                  </a:a>
                                  
                                  <!-- @implements I2cDevErrorDetect_Object -->
                                  <v:var name="I2cDevErrorDetect" type="BOOLEAN">
                                    <a:a name="LABEL" value="I2c Development Error Detection"/>
                                    <a:a name="DESC">
                                     <a:v>
                                            <![CDATA[EN:
                                                <html>
                                                    <p>I2cDevErrorDetect</p>
                                                    <p>Switches the Development Error Detection and Notification ON or OFF.</p>
                                                    Note: Implementation Specific Parameter. <p/>
                                                </html>
                                            ]]>
                                     </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:7228a335-4003-4639-8e1a-bb3d9f762a7b"/>
                                    <a:da name="DEFAULT" value="true"/>
                                  </v:var>

                                  <v:var name="I2cDisableDemReportErrorStatus" type="BOOLEAN">
                                      <a:a name="LABEL" value="I2c Disable Production Error Reporting"/>
                                      <a:a name="DESC">
                                      <a:v>
                                        <![CDATA[EN:
                                            <html>
                                                <p>I2cDisableDemReportErrorStatus</p>
                                                <p>Switches the Diagnostic Error Reporting and Notification OFF.</p>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                        ]]>
                                     </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                   <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:72a8a638-4009-4639-124a-bb4daf863a8b"/>
                                    <a:da name="DEFAULT" value="false"/>
                                  </v:var>
                                  
                                  <v:var name="I2cDmaUsed" type="BOOLEAN">
                                      <a:a name="LABEL" value="I2c DMA Used"/>
                                      <a:a name="DESC">
                                      <a:v>
                                        <![CDATA[EN:
                                            <html>
                                                <p>I2cDmaUsed</p>
                                                <p>Check this in order to be able to use DMA in the I2c driver.</p>
                                                <p>Leaving this unchecked will allow the I2c driver to compile with no dependencies from the Mcl driver.</p>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                        ]]>
                                     </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                   <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:72a8a638-4009-4639-124a-bb4daf844a8b"/>
                                    <a:da name="DEFAULT" value="false"/>
                                  </v:var>
                                                              
                                  <v:var name="I2cFlexIOUsed" type="BOOLEAN">
                                      <a:a name="LABEL" value="I2c FlexIO Used"/>
                                      <a:a name="DESC">
                                      <a:v>
                                        <![CDATA[EN:
                                            <html>
                                                <p>I2cFlexIOUsed</p>
                                                <p>Check this in order to be able to use FlexIO channels.</p>
                                                <p>Leaving this unchecked will allow the I2c driver to generate code without configuring the FlexIO module.</p>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                        ]]>
                                     </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                   <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:72a8a638-4009-4639-124a-bb4daf833a8b"/>
                                    <a:da name="DEFAULT" value="false"/>
                                  </v:var>
                                  
                                  <!-- @implements I2cTimeoutDuration_Object -->
                                  <v:var name="I2cTimeoutDuration" type="INTEGER">
                                    <a:a name="LABEL" value="I2c Timeout Duration"/>
                                    <a:a name="DESC">                 
                                        <a:v>                         
                                            <![CDATA[EN:                 
                                                <html>                
                                                Specifies the maximum number of loops for blocking function until a timeout is raised in short term wait loops <p/>
                                                Note: Implementation Specific Parameter. <p/>
                                                </html>               
                                            ]]>                       
                                        </a:v>                        
                                    </a:a>        
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:ea0e01de-6a8a-4466-841a-76cb28e5c197"/>
                                    <a:da name="DEFAULT" value="1000"/>
                                    <a:da name="INVALID" type="Range">
                                      <a:tst expr="&lt;=65535"/>
                                      <a:tst expr="&gt;=1"/>
                                    </a:da>
                                  </v:var>
                                  
                                  <!-- @implements I2cVersionInfoApi_Object -->
                                  <v:var name="I2cVersionInfoApi" type="BOOLEAN">
                                    <a:a name="LABEL" value="Provide I2c VersionInfo Api"/>
                                    <a:a name="DESC">
                                    <a:v>
                                     <![CDATA[EN:
                                        <html>
                                            <p>I2cVersionInfoApi</p>
                                            <p>Switches the I2c_GetVersionInfo function ON or OFF.</p>
                                            Note: Implementation Specific Parameter. <p/>
                                        </html>
                                     ]]>
                                    </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:be230747-6176-4d0b-61e3-290362e2d3ef"/>
                                    <a:da name="DEFAULT" value="true"/>
                                  </v:var>
                                  
                                  <!-- @implements I2cErrorNotification_Object -->
                                  <v:var name="I2cErrorNotification" type="FUNCTION-NAME">
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html>
                                                Function name of callout. This function will be called if an error is detected.<p/>
                                                Note: Implementation Specific Parameter.
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:8c7cba30-17c7-48bd-ae5f-9ade0363b514"/>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:da name="DEFAULT" value="NULL_PTR"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(text:toupper(normalize-space(node:fallback(., ''))) = '&quot;NULL_PTR&quot;') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = 'NULL_PTR') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = '&quot;NULL&quot;') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = 'NULL') or not
                                                     (text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$'))"
                                           true="Invalid identifier. The field must specify a valid C function identifier (i.e. an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, that must begin with a non-digit character)"/>
                                    </a:da>
                                  </v:var>
                                  

                                  <v:var name="I2cMasterTransmitCompleteNotification" type="FUNCTION-NAME">
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html>
                                                  <p>Function name of callout. This function will be called when a data transmission completes.<br/>
                                                  (Only applicable in master mode!)</p>
                                                Note: Implementation Specific Parameter.
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:17291a1c-163b-4343-87d0-f3ed8536af6b"/>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:da name="DEFAULT" value="NULL_PTR"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(text:toupper(normalize-space(node:fallback(., ''))) = '&quot;NULL_PTR&quot;') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = 'NULL_PTR') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = '&quot;NULL&quot;') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = 'NULL') or not
                                                     (text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$'))"
                                           true="Invalid identifier. The field must specify a valid C function identifier (i.e. an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, that must begin with a non-digit character)"/>
                                    </a:da>
                                  </v:var>
                                  

                                  <v:var name="I2cMasterReceiveCompleteNotification" type="FUNCTION-NAME">
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html>
                                                  <p>Function name of callout. This function will be called when a data reception completes.<br/>
                                                  (Only applicable in master mode!)</p>
                                                Note: Implementation Specific Parameter.
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:72a8a638-4009-4639-124a-bb7daf933b8a"/>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:da name="DEFAULT" value="NULL_PTR"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(text:toupper(normalize-space(node:fallback(., ''))) = '&quot;NULL_PTR&quot;') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = 'NULL_PTR') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = '&quot;NULL&quot;') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = 'NULL') or not
                                                     (text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$'))"
                                           true="Invalid identifier. The field must specify a valid C function identifier (i.e. an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, that must begin with a non-digit character)"/>
                                    </a:da>
                                  </v:var>

                                  <v:var name="I2cSlaveAddressMatchNotification" type="FUNCTION-NAME">
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html>
                                                Function name of callout. This function will be called if an address matching is detected.<p/>
                                                Note: Implementation Specific Parameter.
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:6c3e6592-4a40-49c7-9ef9-1002f4024b09"/>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:da name="DEFAULT" value="NULL_PTR"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(text:toupper(normalize-space(node:fallback(., ''))) = '&quot;NULL_PTR&quot;') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = 'NULL_PTR') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = '&quot;NULL&quot;') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = 'NULL') or not
                                                     (text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$'))"
                                           true="Invalid identifier. The field must specify a valid C function identifier (i.e. an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, that must begin with a non-digit character)"/>
                                    </a:da>
                                  </v:var>

                                  <v:var name="I2cSlaveTransmitCompleteNotification" type="FUNCTION-NAME">
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html>
                                                  <p>Function name of callout. This function will be called when a data transmission completes.<br/>
                                                  (Only applicable in slave mode!)</p>
                                                Note: Implementation Specific Parameter.
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:17291a1c-163b-4343-87d0-f1ed80367f6b"/>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:da name="DEFAULT" value="NULL_PTR"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(text:toupper(normalize-space(node:fallback(., ''))) = '&quot;NULL_PTR&quot;') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = 'NULL_PTR') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = '&quot;NULL&quot;') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = 'NULL') or not
                                                     (text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$'))"
                                           true="Invalid identifier. The field must specify a valid C function identifier (i.e. an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, that must begin with a non-digit character)"/>
                                    </a:da>
                                  </v:var>

                                  <v:var name="I2cSlaveReceiveCompleteNotification" type="FUNCTION-NAME">
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html>
                                                  <p>Function name of callout. This function will be called when a data reception completes.<br/>
                                                  (Only applicable in slave mode!)</p>
                                                Note: Implementation Specific Parameter.
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:17291c3f-163b-4747-87d0-f1ed80367f6b"/>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:da name="DEFAULT" value="NULL_PTR"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(text:toupper(normalize-space(node:fallback(., ''))) = '&quot;NULL_PTR&quot;') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = 'NULL_PTR') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = '&quot;NULL&quot;') or
                                                     (text:toupper(normalize-space(node:fallback(., ''))) = 'NULL') or not
                                                     (text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$'))"
                                           true="Invalid identifier. The field must specify a valid C function identifier (i.e. an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, that must begin with a non-digit character)"/>
                                    </a:da>
                                  </v:var>

                                  <!-- @implements I2cEnableUserModeSupport_Object -->
                                  <v:var name="I2cEnableUserModeSupport" type="BOOLEAN">
                                    <a:a name="DESC">
                                      <a:v><![CDATA[EN:<html> 
                                          When this parameter is enabled, the I2c module will adapt to run from User Mode.
                                          <h1>Note</h1> I2c module does not include registers protection. So, It is accessible to all registered in any public mode.
                                          I2c is not affected by this field.
                                          </html> ]]>
                                      </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0dd697e3-9af6-4625-b4ed-c4215cb6e773"/>
                                    <a:da name="DEFAULT" value="false"/>
                                    <a:da name="READONLY" value="true"/>
                                  </v:var>
                            </v:ctr>
                            
                            <v:ctr name="I2cGlobalConfig" type="IDENTIFIABLE">
                              <a:a name="DESC">
                                  <a:v>
                                      <![CDATA[EN:
                                          <html>
                                          This container contains the global configuration parameter of the I2c driver. This container is a MultipleConfigurationContainer, i.e. this container and its sub-containers exit once per configuration set.                                        
                                          </html>
                                      ]]>
                                  </a:v>
                              </a:a>
                              <a:a name="UUID" value="ECUC:ea3b8cf8-0ae5-5a24-ad07-1759472cf680"/>
                                                              
                              <v:ctr name="I2cFlexIOModuleConfiguration" type="IDENTIFIABLE">
                                  <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:
                                            <html>
                                            This container contains the configuration (parameters) of the Master Configuration.
                                            </html>
                                        ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="UUID" value="ECUC:fdac1ad9-1317-44a8-bc4f-341635a20161"/>
                                <a:a name="LABEL" value="FlexIO Module configuration"/>
                                
                                <v:var name="I2cFlexIOEnabledInDebug" type="BOOLEAN">
                                  <a:a name="LABEL" value="FlexIO enabled in debug mode"/>
                                  <a:a name="DESC">
                                    <a:v>
                                    <![CDATA[EN:
                                        <html>
                                            <p>This configures FLEXIO_CTRL[DBGEN]</p>
                                            <p>Check to enable the FlexIO in debug mode. Uncheck to disable it.</p>
                                            Note: Implementation Specific Parameter. <p/>
                                        </html>
                                    ]]>
                                     </a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="ORIGIN" value="NXP"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="SCOPE" value="LOCAL"/>
                                  <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                  <a:a name="UUID" value="ECUC:4d73fb7b-3335-4107-b2d4-fe9905f6a8af"/>
                                  <a:da name="DEFAULT" value="true"/>
                                  <a:a name="EDITABLE" type="XPath">
                                    <a:tst expr="node:fallback(../../../GeneralConfiguration/I2cFlexIOUsed, 'false')"/>
                                  </a:a>
                                </v:var>
                                
                                <v:var name="I2cFlexIOEnabledInDozeMode" type="BOOLEAN">
                                  <a:a name="LABEL" value="FlexIO enabled in Doze mode"/>
                                  <a:a name="DESC">
                                    <a:v>
                                    <![CDATA[EN:
                                        <html>
                                            <p>This configures FLEXIO_CTRL[DOZEN]</p>
                                            <p>Check to enable the master in doze mode. Uncheck to disable it.</p>
                                            Note: Implementation Specific Parameter. <p/>
                                        </html>
                                    ]]>
                                     </a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="ORIGIN" value="NXP"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="SCOPE" value="LOCAL"/>
                                  <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                  <a:a name="UUID" value="ECUC:72a8a638-4009-4639-124a-bb4dbf864a5b"/>
                                  <a:da name="DEFAULT" value="true"/>
                                  <a:a name="EDITABLE" type="XPath">
                                    <a:tst expr="node:fallback(../../../GeneralConfiguration/I2cFlexIOUsed, 'false')"/>
                                  </a:a>
                                </v:var>
                               
                                <v:var name="I2cFlexIOFastAccessMode" type="BOOLEAN">
                                  <a:a name="LABEL" value="FlexIO Fast Access"/>
                                  <a:a name="DESC">
                                    <a:v>
                                    <![CDATA[EN:
                                        <html>
                                            <p>This configures FLEXIO_CTRL[FASTACC]</p>
                                            <p>Enables fast register accesses to FlexIO registers, but requires the FlexIO clock to be at least twice the frequency of the bus clock.</p>
                                            Check to configure fast register accesses to FlexIO.<p/>
                                            Uncheck to configure normal register accesses to FlexIO.<p/>
                                            Note: Implementation Specific Parameter. <p/>
                                        </html>
                                    ]]>
                                     </a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="ORIGIN" value="NXP"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="SCOPE" value="LOCAL"/>
                                  <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                  <a:a name="UUID" value="ECUC:72a8a638-4009-4634-124a-bb4dbf864a7b"/>
                                  <a:da name="DEFAULT" value="false"/>
                                  <a:a name="EDITABLE" type="XPath">
                                    <a:tst expr="node:fallback(../../../GeneralConfiguration/I2cFlexIOUsed, 'false')"/>
                                  </a:a>
                                </v:var>
                               
                                <!-- @implements I2cClockRef_Object -->
                                <v:ref name="I2cClockRef" type="REFERENCE">
                                  <a:a name="DESC">
                                      <a:v>
                                          <![CDATA[EN: 
                                           <html>
                                              <p>Reference to the FlexIO clock source configuration, which is set in the MCU driver configuration.</p>
                                              Note: Implementation Specific Parameter. <p/>
                                          </html>
                                          ]]>
                                      </a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="OPTIONAL" value="true"/>
                                  <a:a name="SCOPE" value="LOCAL"/>
                                  <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                  <a:a name="ORIGIN" value="NXP"/>
                                  <a:a name="UUID" value="ECUC:5419eaab-b72b-4ee1-9e89-22f203491c61"/>
                                  <a:a name="INVALID" type="XPath">
                                    <a:tst expr="(
                                                      (node:fallback(../../../GeneralConfiguration/I2cFlexIOUsed, 'false') = 'true') and
                                                      ((node:empty(.)) = 'true')
                                                 )"
                                                 true="Field is empty (Suggestion: select a McuClockReferencePoint reference)."/>
                                    <a:tst expr="(
                                                      (node:fallback(../../../GeneralConfiguration/I2cFlexIOUsed, 'false') = 'true') and
                                                      (not(node:refvalid(.)) = 'true')
                                                 )"
                                                 true="Invalid McuClockReferencePoint reference (Suggestion: select a McuClockReferencePoint reference)."/>
                                  </a:a>
                                  <a:a name="EDITABLE" type="XPath">
                                    <a:tst expr="node:fallback(../../../GeneralConfiguration/I2cFlexIOUsed, 'false')"/>
                                  </a:a>
                                  <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcu/McuModuleConfiguration/McuClockSettingConfig/McuClockReferencePoint"/>
                                </v:ref>
                                
                              </v:ctr>

                              <!-- @implements I2cChannel_Object -->
                              <v:lst name="I2cChannel" type="MAP">
                                <a:da name="MIN" value="1"/>
                                <a:da name="MAX" type="XPath" expr="ecu:get(&apos;I2c.I2cGlobalConfig.I2cChannel&apos;)"/>
                              
                                <v:ctr name="I2cChannel" type="IDENTIFIABLE">
                                  <a:a name="DESC">
                                      <a:v>
                                          <![CDATA[EN:
                                              <html>
                                              This container contains the configuration (parameters) of the I2c Controller(s).
                                              <h1>Note:</h1>"User should use unique names for naming the I2c channels across different I2cGlobalConfig Sets."
                                              </html>
                                          ]]>
                                      </a:v>
                                  </a:a>
                                  <a:a name="UUID" value="ECUC:9f1209fb-5482-4e6b-bf29-8231b2a8da2d"/>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                      <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                  </a:a>
                              
                                  <!-- @implements I2cChannelId_Object -->
                                  <v:var name="I2cChannelId" type="INTEGER">
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:
                                                <html>
                                                Identifies the I2c channel. <p/>
                                                Note: Implementation Specific Parameter. <p/>
                                                </html>
                                            ]]>
                                        </a:v>
                                    </a:a> 
                                    <a:a name="LABEL" value="I2c Channel ID" />
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                    <a:a name="UUID" 
                                         value="ECUC:aac952ef-7cb7-4b94-acc5-b6c4ca835e7a"/>
                                    <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index, num:i(1))"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=0"/>
                                        <a:tst expr="&lt;(ecu:get(&apos;I2c.I2cGlobalConfig.I2cChannel&apos;))"/>
                                    </a:da>
                                    <a:da name="RANGE" type="XPath">
                                        <a:tst expr="(. &gt;= 0) and (.&lt; num:i(count(node:current()/../../*)))"
                                               false="Value out of range: must be in range 0 to N-1 (N is number of configured channels). Use the 'Calculate Value' button to calculate correct default value."/>
                                        <a:tst expr="text:uniq(../../*/I2cChannelId, .)"
                                               false="Duplicated value: I2cChannelId must be unique across all I2c channels. Use the 'Calculate Value' button to calculate correct default value."/>              
                                    </a:da>
                                  </v:var>
                                  
                                  <v:var name="I2cHwChannel" type="ENUMERATION">                
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:
                                                <html>                   
                                                Selects the physical I2c Channel. <p/>
                                                Note: Implementation Specific Parameter. <p/>                    
                                                </html>
                                            ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="LABEL" value="I2c hardware channel" />
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    </a:a>        
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" 
                                         value="ECUC:38348b20-3249-431a-ab13-8afb524661cd"/>                                          
                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list(&apos;I2c.I2cGlobalConfig.I2cChannel.I2cHwChannel&apos;))[position()-1=node:fallback( node:current()/../@index, '0')]">
                                    </a:da>
                                     <a:da name="INVALID" type="XPath">
                                      <a:tst expr="text:uniq(node:fallback(../../*/I2cHwChannel, 0 ), node:fallback( ., 1 ))"
                                             false="Duplicate physical I2c channel: I2cHwChannel must be unique across all I2c channels. Use the 'Calculate Value' button to calculate correct default value."/>
                                      <a:tst expr="(node:fallback(../../../../GeneralConfiguration/I2cFlexIOUsed, 'false') = 'false') and contains(node:fallback( ., 'LPI2C'), 'FLEXIO')" true="The I2cFlexIOUsed checkbox in GeneralConfiguration must be checked in order to use this type of channel."/>
                                      <a:tst expr="(
                                                        contains(node:fallback( ., 'LPI2C'), 'FLEXIO') and
                                                        not(node:exists(../../../I2cFlexIOModuleConfiguration/I2cClockRef))
                                                   )"
                                                   true="An McuClockReferencePoint reference for FlexIO must be configured. Refer to /I2c/I2cGlobalConfig/I2cFlexIOModuleConfiguration/I2cClockRef."/>
                                      <a:tst expr="(
                                                        contains(node:fallback( ., 'LPI2C'), 'LPI2C') and
                                                        (node:fallback(../I2cMasterSlaveConfiguration,'MASTER_MODE') = 'MASTER_MODE') and
                                                        not(node:exists(../I2cMasterConfiguration/I2cClockRef))
                                                   )"
                                                   true="An McuClockReferencePoint reference for LPI2C must be configured. Refer to I2cChannel_x/I2cMasterConfiguration/I2cClockRef"/>
                                    </a:da>
                                    <a:da name="RANGE" type="XPath" 
                                          expr="ecu:list(&apos;I2c.I2cGlobalConfig.I2cChannel.I2cHwChannel&apos;)"/>
                                  </v:var>
                                  
                                  <v:var name="I2cMasterSlaveConfiguration" type="ENUMERATION">                
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:
                                                <html>                   
                                                Selects the master slave configuration. <p/>
                                                Select wether the selected channel will be used as Master, Slave or both. <p/>
                                                Note: Implementation Specific Parameter. <p/>                    
                                                </html>
                                            ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="LABEL" value="I2c master/slave configuration" />
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    </a:a>        
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                    <a:a name="UUID" value="ECUC:2121e93b-3d41-4334-bcb4-6b273af183fc"/>                                         
                                    <a:da name="DEFAULT" value="MASTER_MODE"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(
                                                      not(contains(node:fallback(../I2cHwChannel,0),'LPI2C')) and
                                                      (node:fallback(.,'MASTER_MODE') = 'SLAVE_MODE')
                                                     )"
                                           true="Only LPI2C channels can be configured as slaves."/>
                                    </a:da>
                                    <a:da name="RANGE">
                                        <a:v>MASTER_MODE</a:v>
                                        <a:v>SLAVE_MODE</a:v>
                                    </a:da>
                                  </v:var>
                                  
                                  <v:var name="I2cPinConfiguration" type="ENUMERATION">                
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:
                                                <html>                   
                                                Selects the pin configuration. <p/>
                                                Configures the pin mode. <p/>
                                                000 LPI2C configured for 2-pin open drain mode. <p/>
                                                001 LPI2C configured for 2-pin output only mode (ultra-fast mode). <p/>
                                                010 LPI2C configured for 2-pin push-pull mode. <p/>
                                                Note: Implementation Specific Parameter. <p/>                    
                                                </html>
                                            ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="LABEL" value="I2c pin configuration" />
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    </a:a>        
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" 
                                         value="ECUC:2121e93b-3d41-4334-bcb4-6b273af183ec"/>                                         
                                    <a:da name="DEFAULT" value="PINCFG_2PIN_PUSH_PULL"/>
                                    <a:a name="EDITABLE" type="XPath">
                                      <a:tst expr="(contains(node:fallback(../I2cHwChannel,0),'LPI2C'))"/>
                                    </a:a>
                                    <a:da name="RANGE">
                                        <a:v>PINCFG_2PIN_OPEN_DRAIN</a:v>
                                        <a:v>PINCFG_2PIN_PUSH_PULL</a:v>
                                        <a:v>PINCFG_2PIN_OUTPUT_ONLY</a:v>
                                    </a:da>
                                  </v:var>
                                  
                                  <v:ctr name="I2cMasterConfiguration" type="IDENTIFIABLE">
                                      <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:
                                                <html>
                                                This container contains the configuration (parameters) of the Master Configuration.
                                                </html>
                                            ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="UUID" value="ECUC:fdac1ad9-1317-44a8-bc4f-341635a10162"/>
                                    <a:a name="LABEL" value="LPI2C Master configuration"/>

                                    <v:var name="I2cMasterEnabledInDebug" type="BOOLEAN">
                                      <a:a name="LABEL" value="I2c Master enabled in debug mode"/>
                                      <a:a name="DESC">
                                        <a:v>
                                        <![CDATA[EN:
                                            <html>
                                                <p>I2cMasterEnabledInDebug configures LPI2C_MCR[DBGEN]</p>
                                                <p>Check to enable the master in debug mode. Uncheck to disable it.</p>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                        ]]>
                                         </a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:4d73fb7b-3335-4107-b2d4-fe9905f6a9af"/>
                                      <a:da name="DEFAULT" value="false"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                    </v:var>
                                    
                                    <v:var name="I2cMasterEnabledInDozeMode" type="BOOLEAN">
                                      <a:a name="LABEL" value="I2c Master enabled in Doze mode"/>
                                      <a:a name="DESC">
                                        <a:v>
                                        <![CDATA[EN:
                                            <html>
                                                <p>I2cMasterEnabledInDozeMode configures LPI2C_MCR[DOZEN]</p>
                                                <p>Check to enable the master in doze mode. Uncheck to disable it.</p>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                        ]]>
                                         </a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:72a8a638-4009-4639-124a-bb4dbf864a7b"/>
                                      <a:da name="DEFAULT" value="true"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                    </v:var>
                                   
                                    <!-- @implements I2cClockRef_Object -->
                                    <v:ref name="I2cClockRef" type="REFERENCE">
                                      <a:a name="DESC">
                                          <a:v>
                                              <![CDATA[EN: 
                                               <html>
                                                  <p>Reference to the I2c clock source configuration, which is set in the MCU driver configuration.</p>
                                                  Note: Implementation Specific Parameter. <p/>
                                              </html>
                                              ]]>
                                          </a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="OPTIONAL" value="true"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:5419eaab-b72b-4ee1-9e89-22f203491d67"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                      <a:a name="INVALID" type="XPath">
                                        <a:tst expr="(
                                                          (contains(node:fallback(../../I2cHwChannel,0),'LPI2C')) and
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                           node:empty(.)
                                                     )"
                                                     true="Field is empty (Suggestion: select an McuClockReferencePoint reference)."/>
                                        <a:tst expr="(
                                                          (contains(node:fallback(../../I2cHwChannel,0),'LPI2C')) and
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                           not(node:refvalid(.))
                                                     )"
                                                     true="Invalid McuClockReferencePoint reference (Suggestion: select an McuClockReferencePoint reference)."/>
                                      </a:a>
                                      <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcu/McuModuleConfiguration/McuClockSettingConfig/McuClockReferencePoint"/>
                                    </v:ref>
                                    
                                    <!-- @implements I2cAsyncMethod_Object -->
                                    <v:var name="I2cAsyncMethod" type="ENUMERATION">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>Configures the asynchronous mechanism used by the 'AsyncTransmit' function (interrupts or DMA).</p>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Asynchronous Method" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                    
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:240b6eec-0e3a-4030-9533-5cc2db9bec01"/>
                                      <a:da name="DEFAULT" value="INTERRUPT"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                      <a:da name="RANGE">
                                          <a:v>INTERRUPT</a:v>
                                          <a:v>DMA</a:v>
                                      </a:da>
                                      <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(.,'INTERRUPT') = 'DMA') and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C')) and
                                                        (node:fallback(../../../../../GeneralConfiguration/I2cDmaUsed,'false') = 'false')
                                                     )"
                                                     true="The I2cDmaUsed checkbox in GeneralConfiguration must be checked in order to use DMA as an asynchronous method."/>
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(.,'INTERRUPT') = 'DMA') and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C')) and
                                                        (not(node:exists(../I2cDmaTxChannelRef)))
                                                     )"
                                                     true="A DMA transmission (TX) channel reference must be configured. Refer to I2cMasterConfiguration/I2cDmaTxChannelRef."/>
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(.,'INTERRUPT') = 'DMA') and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C')) and
                                                        (not(node:exists(../I2cDmaRxChannelRef)))
                                                     )"
                                                     true="A DMA receive (RX) channel reference must be configured. Refer to I2cMasterConfiguration/I2cDmaRxChannelRef."/>
                                      </a:da>
                                    </v:var>
                                    
                                    <v:ref name="I2cDmaTxChannelRef" type="REFERENCE">
                                      <a:a name="DESC">
                                          <a:v>
                                            <![CDATA[EN: 
                                             <html>
                                                <p>Reference to the DMA TX channel, which is set in the Mcl driver configuration.</p>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                            ]]>
                                        </a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="OPTIONAL" value="true"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="LABEL" value="I2c TX DMA Channel"/>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="UUID" value="ECUC:5419eaab-b73b-4ee2-9e88-22e201491b61"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (node:fallback(../I2cAsyncMethod, 'INTERRUPT') = 'DMA')
                                                       and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                      <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(.,'INTERRUPT') = 'DMA') and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C')) and
                                                        (node:empty(.))
                                                     )"
                                               true="Field is empty (Suggestion: select a DMAChannel reference)."/>
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(.,'INTERRUPT') = 'DMA') and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C')) and
                                                        (not(node:refvalid(.)))
                                                     )"
                                               true="Invalid DMAChannel reference (Suggestion: select a DMAChannel reference)."/>
                                      </a:da>
                                      <a:da name="REF" value="ASPathDataOfSchema:/TS_T40D2M10I1R0/Mcl/MclConfigSet/DMAChannel"/>
                                    </v:ref>
                                    
                                    <v:ref name="I2cDmaRxChannelRef" type="REFERENCE">
                                      <a:a name="DESC">
                                          <a:v>
                                            <![CDATA[EN: 
                                             <html>
                                                <p>Reference to the DMA RX channel, which is set in the Mcl driver configuration.</p>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                            ]]>
                                        </a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="OPTIONAL" value="true"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="LABEL" value="I2c RX DMA Channel"/>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="UUID" value="ECUC:5419eaab-b73b-4ee2-9e88-22e203421b61"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (node:fallback(../I2cAsyncMethod, 'INTERRUPT') = 'DMA')
                                                       and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                      <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(.,'INTERRUPT') = 'DMA') and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C')) and
                                                        (node:empty(.))
                                                     )"
                                               true="Field is empty (Suggestion: select a DMAChannel reference)."/>
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(.,'INTERRUPT') = 'DMA') and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C')) and
                                                        (not(node:refvalid(.)))
                                                     )"
                                               true="Invalid DMAChannel reference (Suggestion: select a DMAChannel reference)."/>
                                      </a:da>
                                      <a:da name="REF" value="ASPathDataOfSchema:/TS_T40D2M10I1R0/Mcl/MclConfigSet/DMAChannel"/>
                                    </v:ref>

                                    <v:var name="I2cPrescaler" type="ENUMERATION">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>PRESCALE: Configures LPI2C_MCFGR1[PRESCALE]</p>
                                                 <p>Configures the clock prescaler used for all LPI2C master logic, except the digital glitch filters.</p>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Prescaler" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="UUID" value="ECUC:240b5eec-0e3a-4030-9533-5cc2db9beb07"/>
                                      <a:da name="DEFAULT" value="DIVIDE_BY_1"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                      <a:da name="RANGE">
                                          <a:v>DIVIDE_BY_1</a:v>
                                          <a:v>DIVIDE_BY_2</a:v>
                                          <a:v>DIVIDE_BY_4</a:v>
                                          <a:v>DIVIDE_BY_8</a:v>
                                          <a:v>DIVIDE_BY_16</a:v>
                                          <a:v>DIVIDE_BY_32</a:v>
                                          <a:v>DIVIDE_BY_64</a:v>
                                          <a:v>DIVIDE_BY_128</a:v>
                                      </a:da>
                                    </v:var>
                                    
                                    <v:var name="I2cGlitchFilterSDA" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>Glitch Filter SDA: Configures LPI2C_MCFGR2[FILTSDA]</p>
                                                 Configures the I2c master digital glitch filters for SDA input, a configuration of 0 will disable the glitch filter.<p/>
                                                 Glitches equal to or less than FILTSDA cycles long will be filtered out and ignored. The latency through the glitch filter is equal to FILTSDA cycles and must be configured less than the minimum SCL low or high period.<p/>
                                                 The glitch filter cycle count is not affected by the PRESCALE configuration and is automatically bypassed in High Speed mode. <p/>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Glitch Filter SDA (cycles)" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="UUID" value="ECUC:5945b101-0f6d-4521-be2f-80331c06180a"/>
                                      <a:da name="DEFAULT" value="0"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=15"/>
                                        <a:tst expr="&gt;=0"/>
                                      </a:da>
                                      <a:da name="RANGE" type="XPath">
                                          <a:tst expr="( num:i(node:fallback(.,0)) &lt; num:i(0) or num:i(node:fallback(.,0)) &gt; num:i(15))"
                                              true="FILTSDA must be between 0 and 15"/>
                                          <a:tst expr="( num:i(node:fallback(.,0)) &gt; ((num:i(node:fallback(../I2cClockLowPeriod,3))*num:i(substring-after(node:fallback(../I2cPrescaler,'DIVIDE_BY_1'),'DIVIDE_BY_')))-3) )"
                                              true="FILTSDA must be less than or equal to [CLKLO × (2 ^ PRESCALER)]- 3 (i.e. I2cGlitchFilterSDA &lt;= (I2cClockLowPeriod × num(I2cPrescaler)) - 3)."/>
                                          <a:tst expr="( num:i(node:fallback(.,0)) &lt; (num:i(node:fallback(../I2cGlitchFilterSCL,0))) )"
                                              true="FILTSDA must be greater than or equal to FILTSCL (i.e. I2cGlitchFilterSDA &gt;= I2cGlitchFilterSCL)."/>
                                      </a:da>
                                    </v:var>
                                    
                                    <v:var name="I2cGlitchFilterSCL" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                               <p>Glitch Filter SCL: Configures LPI2C_MCFGR2[FILTSCL]</p>
                                               Configures the I2c master digital glitch filters for SCL input, a configuration of 0 will disable the glitch filter. <p/>
                                               Glitches equal to or less than FILTSCL cycles long will be filtered out and ignored. The latency through the glitch filter is equal to FILTSCL cycles and must be configured less than the minimum SCL low or high period.<p/>
                                               The glitch filter cycle count is not affected by the PRESCALE configuration and is automatically bypassed in High Speed mode. <p/>
                                               Note: Implementation Specific Parameter. <p/>
                                             </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Glitch Filter SCL (cycles)" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                   
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:59dba5b4-746c-4b92-951e-1b698a464519"/>
                                      <a:da name="DEFAULT" value="0"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=15"/>
                                        <a:tst expr="&gt;=0"/>
                                      </a:da>
                                      <a:da name="RANGE" type="XPath">
                                          <a:tst expr="( num:i(node:fallback(.,0)) &lt; num:i(0) or num:i(node:fallback(.,0)) &gt; num:i(15))"
                                              true="FILTSDA must be between 0 and 15"/>
                                          <a:tst expr="( num:i(.) &gt; ((num:i(node:fallback(../I2cClockLowPeriod,3))*num:i(substring-after(node:fallback(../I2cPrescaler,'DIVIDE_BY_1'),'DIVIDE_BY_')))-3) )"
                                              true="FILTSCL must be less than or equal to [CLKLO × (2 ^ PRESCALER)]- 3 (i.e. I2cGlitchFilterSCL &lt;= (I2cClockLowPeriod × num(I2cPrescaler)) - 3)."/>
                                      </a:da>
                                    </v:var>
                                   
                                    <v:var name="I2cBusIdleTimeout" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>Bus Idle Timeout: Configures LPI2C_MCFGR2[BUSIDLE]</p>
                                                 <p>Configures the bus idle timeout period in clock cycles. If both SCL and SDA are high for longer than BUSIDLE cycles, then the I2c bus is assumed to be idle and the master can generate a START condition. When set to zero, this feature is disabled.</p>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Bus Idle Timeout (cycles)" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                   
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" 
                                           value="ECUC:3101c48d-3a53-4fac-ae0f-efe91312255f"/>
                                      <a:da name="DEFAULT" value="0"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=4095"/>
                                        <a:tst expr="&gt;=0"/>
                                      </a:da>
                                      <a:da name="RANGE" type="XPath">
                                          <a:tst expr="( num:i(node:fallback(.,0)) &lt; num:i(0) or num:i(node:fallback(.,0)) &gt; num:i(4095))"
                                              true="BUSIDLE must be between 0 and 4095"/>
                                          <a:tst expr="(num:i(node:fallback(.,0)) != 0) and ( num:i(node:fallback(.,0)) &lt; ((num:i(node:fallback(../I2cClockLowPeriod,3))+num:i(node:fallback(../I2cSetupHoldDelay,0))+2)*2) )"
                                              true="If used, BUSIDLE must be greater or equal to (CLKLO+SETHOLD+2) × 2 (i.e. I2cBusIdleTimeout ;gt= (I2cClockLowPeriod + I2cSetupHoldDelay + 2) × 2)."/>
                                          <a:tst expr="(num:i(node:fallback(.,0)) != 0) and ( num:i(node:fallback(.,0)) &lt;= (num:i(node:fallback(../I2cClockHighPeriod,1))+2) )"
                                              true="If used, BUSIDLE must be greater than (CLKHI+1) (i.e. I2cBusIdleTimeout &gt; I2cClockHighPeriod + 1)."/>
                                      </a:da>
                                    </v:var>
                                   
                                    <v:var name="I2cPinLowTimeout" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>Pin Low Timeout: Configures LPI2C_MCFGR3[PINLOW]</p>
                                                 <p>Configures the pin low timeout flag in clock cycles. If SCL and/or SDA is low for longer than (PINLOW * 256) cycles then PLTF is set. When set to zero, this feature is disabled.</p>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Pin Low Timeout (cycles)" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="UUID" value="ECUC:02af9d3b-c106-4715-9062-814c66309262"/>
                                      <a:da name="DEFAULT" value="0"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=4095"/>
                                        <a:tst expr="&gt;=0"/>
                                      </a:da>
                                    </v:var>
                                    
                                    <v:var name="I2cDataValidDelay" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>Data Valid Delay: Configures LPI2C_MCCR0[DATAVD]</p>
                                                 <p>Minimum number of cycles (minus one) that is used as the data hold time for SDA. Must be configured less than the minimum SCL low period.</p>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Data Valid Delay (cycles)" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="UUID" value="ECUC:b350e06a-f859-4257-8c9c-15e346dfe2cf"/>
                                      <a:da name="DEFAULT" value="1"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=63"/>
                                        <a:tst expr="&gt;=1"/>
                                      </a:da>
                                      <a:da name="RANGE" type="XPath">
                                          <a:tst expr="( num:i(node:fallback(.,0)) &gt; (num:i(node:fallback(../I2cClockLowPeriod,3))-floor((num:i(node:fallback(../I2cGlitchFilterSDA,0))+2) div num:i(substring-after(node:fallback(../I2cPrescaler,'DIVIDE_BY_1'),'DIVIDE_BY_')))) )"
                                              true="DATAVD must be less than or equal to CLKLO - SDA_LATENCY, where SDA_LATENCY = ROUNDDOWN ( (2 + FILTSDA + SDA_RISETIME) / (2 ^ PRESCALE) )."/>
                                      </a:da>
                                    </v:var>
                                    
                                    <v:var name="I2cSetupHoldDelay" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>Setup Hold Delay: Configures LPI2C_MCCR0[SETHOLD]</p>
                                                 <p>Minimum number of cycles (minus one) that is used by the master as the setup and hold time for a
                                                    (repeated) START condition and setup time for a STOP condition.</p>
                                                    The setup time is extended by the time it takes to detect a rising edge on the external SCL pin. 
                                                    Ignoring any additional board delay due to external loading, this is equal to (2 + FILTSCL) / 2^PRESCALE cycles. <p/>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Setup Hold Delay (cycles)" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="UUID" value="ECUC:0b6dbe56-ece8-4c06-8eef-c17f49a6c79e"/>
                                      <a:da name="DEFAULT" value="2"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=63"/>
                                        <a:tst expr="&gt;=num:i(ecu:get(concat('I2c.I2cGlobalConfig.I2cChannel.I2cMasterConfiguration.',node:value(../../I2cHwChannel))))"/>
                                      </a:da>
                                    </v:var>
                                    
                                    <v:var name="I2cClockHighPeriod" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>Clock High Period: Configures LPI2C_MCCR0[CLKHI]</p>
                                                 <p>Minimum number of cycles (minus one) that the SCL clock is driven high by the master.</p>
                                                 The SCL high time is extended by the time it takes to detect a rising edge on the external SCL pin. <p/> 
                                                 Ignoring any additional board delay due to external loading, this is equal to (2 + FILTSCL) / 2^PRESCALE cycles. <p/>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Clock High Period (cycles)" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                   
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:e2d7a1cf-ade1-4aa4-9c4a-422f2b1121ba"/>
                                      <a:da name="DEFAULT" value="1"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=63"/>
                                        <a:tst expr="&gt;=1"/>
                                      </a:da>
                                    </v:var>
                                    
                                    <v:var name="I2cClockLowPeriod" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>Clock Low Period: Configures LPI2C_MCCR0[CLKLO]</p>
                                                 <p>Minimum number of cycles (minus one) that the SCL clock is driven low by the master.</p>
                                                 This value is also used for the minimum bus free time between a STOP and a START condition. <p/>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Clock Low Period (cycles)" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="UUID" value="ECUC:4e339983-68a2-4d9c-9eaa-9c9c48b8db52"/>
                                      <a:da name="DEFAULT" value="3"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=63"/>
                                        <a:tst expr="&gt;=3"/>
                                      </a:da>
                                    </v:var>
                                    
                                    <!-- @implements I2cBaudRate_Object -->
                                    <v:var name="I2cBaudRate" type="FLOAT">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>Calculated as Frequency/(((CLKLO+CLKHI+2)*2^PRESCALER)+ROUNDDOWN((2+FILTSCL)/2^PRESCALER))</p>
                                                 The functional clock must be at least 8 times faster than the I2c bus bandwidth. <p/>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Baud Rate" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:0a2f04ba-5b60-46bd-92f1-c75db251a411"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                       (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                     ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))
                                                     "/>
                                      </a:a>
                                      <a:da name="DEFAULT" type="XPath">
                                        <a:tst expr="
                                                    (
                                                      (noderef:value(concat(noderef:ref(node:fallback(../I2cClockRef, .)),'/McuClockReferencePointFrequency')) div
                                                          (
                                                           (num:i(node:fallback(../I2cClockLowPeriod,3)) + num:i(node:fallback(../I2cClockHighPeriod,1)) + num:i(2)) *
                                                            num:i(substring-after(node:fallback(../I2cPrescaler,'DIVIDE_BY_1'),'DIVIDE_BY_')) +
                                                            floor((num:i(2)+num:i(node:fallback(../I2cGlitchFilterSCL,0))) div num:i(substring-after(node:fallback(../I2cPrescaler,'DIVIDE_BY_1'),'DIVIDE_BY_')))
                                                           )
                                                      )
                                                    )
                                        "/>
                                      </a:da>
                                      <a:a name="RANGE" type="XPath">
                                          <a:tst expr="
                                          (
                                              (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                              (contains(node:fallback(../../I2cHwChannel,0),'LPI2C')) and
                                              not( node:empty( node:fallback(., 1000000) )) and
                                              (
                                                  num:f(node:fallback(., 1000000)) !=
                                                  (
                                                    (noderef:value(concat(noderef:ref(node:fallback(../I2cClockRef, .)),'/McuClockReferencePointFrequency')) div
                                                      (
                                                       (num:i(node:fallback(../I2cClockLowPeriod,3)) + num:i(node:fallback(../I2cClockHighPeriod,1)) + num:i(2)) *
                                                        num:i(substring-after(node:fallback(../I2cPrescaler,'DIVIDE_BY_1'),'DIVIDE_BY_')) +
                                                        floor((num:i(2)+num:i(node:fallback(../I2cGlitchFilterSCL,0))) div num:i(substring-after(node:fallback(../I2cPrescaler,'DIVIDE_BY_1'),'DIVIDE_BY_')))
                                                       )
                                                    )
                                                  )
                                              )
                                          )"
                                          true="Please press the button to calculate the value automatically."/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=0.0" false="This baud rate is too low."/>
                                        <a:tst expr="&lt;=6000000.0" false="This baud rate is too high."/>
                                      </a:da>
                                    </v:var>
                                    
                                    <v:ctr name="I2cHighSpeedModeConfiguration" type="IDENTIFIABLE">
                                      <a:a name="DESC">
                                          <a:v>
                                              <![CDATA[EN:
                                                  <html>
                                                  This container contains the configuration (parameters) of the Master Clock Configuration Register 1.
                                                  </html>
                                              ]]>
                                          </a:v>
                                      </a:a>
                                      <a:a name="UUID" value="ECUC:b993be3e-e6b3-4a5f-9912-0f010dccfa31"/>
                                    
                                      <v:var name="I2cDataValidDelay" type="INTEGER">
                                        <a:a name="DESC">
                                         <a:v>
                                             <![CDATA[EN:
                                                 <html>
                                                   <p>Data Valid Delay: Configures LPI2C_MCCR1[DATAVD]</p>
                                                   <p>Minimum number of cycles (minus one) that is used as the data hold time for SDA. Must be configured less than the minimum SCL low period.</p>
                                                   Note: Implementation Specific Parameter. <p/>
                                                 </html>
                                            ]]>
                                         </a:v>
                                        </a:a>
                                        <a:a name="LABEL" value="I2c Data Valid Delay (cycles)" />
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                             type="IMPLEMENTATIONCONFIGCLASS">
                                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:a153d871-fecc-4f2b-8082-83865334be61"/>
                                        <a:da name="DEFAULT" value="1"/>
                                        <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                          (node:fallback(../../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../../I2cHwChannel,0),'LPI2C'))"/>
                                        </a:a>
                                        <a:da name="INVALID" type="Range">
                                          <a:tst expr="&lt;=63"/>
                                          <a:tst expr="&gt;=1"/>
                                        </a:da>
                                        <a:da name="RANGE" type="XPath">
                                            <a:tst expr="( num:i(node:fallback(.,0)) &gt; (num:i(node:fallback(../I2cClockLowPeriod,3))-floor((num:i(node:fallback(../../I2cGlitchFilterSDA,0))+2) div num:i(substring-after(node:fallback(../../I2cPrescaler,'DIVIDE_BY_1'),'DIVIDE_BY_')))) )"
                                                true="DATAVD must be less than or equal to CLKLO - SDA_LATENCY, where SDA_LATENCY = ROUNDDOWN ( (2 + FILTSDA + SDA_RISETIME) / (2 ^ PRESCALE) )."/>
                                        </a:da>
                                      </v:var>
                                      
                                      <v:var name="I2cSetupHoldDelay" type="INTEGER">
                                        <a:a name="DESC">
                                         <a:v>
                                             <![CDATA[EN:
                                                 <html>
                                                   <p>Setup Hold Delay: Configures LPI2C_MCCR1[SETHOLD]</p>
                                                   <p>Minimum number of cycles (minus one) that is used by the master as the setup and hold time for a (repeated) START condition and setup time for a STOP condition.</p>
                                                   The setup time is extended by the time it takes to detect a rising edge on the external SCL pin. <p/>
                                                   Ignoring any additional board delay due to external loading, this is equal to (2 + FILTSCL) / 2^PRESCALE cycles. <p/>
                                                   Note: Implementation Specific Parameter. <p/>
                                                 </html>
                                            ]]>
                                         </a:v>
                                        </a:a>
                                        <a:a name="LABEL" value="I2c Setup Hold Delay (cycles)" />
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                             type="IMPLEMENTATIONCONFIGCLASS">
                                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:f8c1f9d9-42e4-46ea-9c53-e03865f6ddb7"/>
                                        <a:da name="DEFAULT" value="2"/>
                                        <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                          (node:fallback(../../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../../I2cHwChannel,0),'LPI2C'))"/>
                                        </a:a>
                                        <a:da name="INVALID" type="Range">
                                          <a:tst expr="&lt;=63"/>
                                          <a:tst expr="&gt;=num:i(ecu:get(concat('I2c.I2cGlobalConfig.I2cChannel.I2cMasterConfiguration.',node:value(../../../I2cHwChannel))))"/>
                                        </a:da>
                                      </v:var>
                                      
                                      <v:var name="I2cClockHighPeriod" type="INTEGER">
                                        <a:a name="DESC">
                                         <a:v>
                                             <![CDATA[EN:
                                                 <html>
                                                   <p>Clock High Period: Configures LPI2C_MCCR1[CLKHI]</p>
                                                   <p>Minimum number of cycles (minus one) that the SCL clock is driven high by the master.</p>
                                                   The SCL high time is extended by the time it takes to detect a rising edge on the external SCL pin. <p/>
                                                   Ignoring any additional board delay due to external loading, this is equal to (2 + FILTSCL) / 2^PRESCALE cycles. <p/>
                                                   Note: Implementation Specific Parameter. <p/>
                                                 </html>
                                            ]]>
                                         </a:v>
                                        </a:a>
                                        <a:a name="LABEL" value="I2c Clock High Period (cycles)" />
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                             type="IMPLEMENTATIONCONFIGCLASS">
                                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:7b939fda-f141-4650-a1c2-72cdd9274a74"/>
                                        <a:da name="DEFAULT" value="1"/>
                                        <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                          (node:fallback(../../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../../I2cHwChannel,0),'LPI2C'))"/>
                                        </a:a>
                                        <a:da name="INVALID" type="Range">
                                          <a:tst expr="&lt;=63"/>
                                          <a:tst expr="&gt;=1"/>
                                        </a:da>
                                      </v:var>
                                      
                                      <v:var name="I2cClockLowPeriod" type="INTEGER">
                                        <a:a name="DESC">
                                         <a:v>
                                             <![CDATA[EN:
                                                 <html>
                                                   <p>Clock Low Period: Configures LPI2C_MCCR1[CLKLO]</p>
                                                   <p>Minimum number of cycles (minus one) that the SCL clock is driven low by the master.</p>
                                                   This value is also used for the minimum bus free time between a STOP and a START condition. <p/>
                                                   Note: Implementation Specific Parameter. <p/>
                                                 </html>
                                            ]]>
                                         </a:v>
                                        </a:a>
                                        <a:a name="LABEL" value="I2c Clock Low Period (cycles)" />
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                             type="IMPLEMENTATIONCONFIGCLASS">
                                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:ce59282f-7816-429e-8bda-114dd841fc90"/>
                                        <a:da name="DEFAULT" value="3"/>
                                        <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                          (node:fallback(../../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../../I2cHwChannel,0),'LPI2C'))"/>
                                        </a:a>
                                        <a:da name="INVALID" type="Range">
                                          <a:tst expr="&lt;=63"/>
                                          <a:tst expr="&gt;=3"/>
                                        </a:da>
                                      </v:var>
                                    
                                      <v:var name="I2cHighSpeedBaudRate" type="FLOAT">
                                        <a:a name="DESC">
                                         <a:v>
                                             <![CDATA[EN:
                                                 <html>
                                                   <p>Calculated as Frequency/(((CLKLO+CLKHI+2)*2^PRESCALER)+ROUNDDOWN((2+FILTSCL)/2^PRESCALER))</p>
                                                   The functional clock must be at least 8 times faster than the I2c bus bandwith. <p/>
                                                   Note: Implementation Specific Parameter. <p/>
                                                 </html>
                                            ]]>
                                         </a:v>
                                        </a:a>
                                        <a:a name="LABEL" value="I2c Baud Rate" />
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                             type="IMPLEMENTATIONCONFIGCLASS">
                                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                        <a:a name="UUID" value="ECUC:087f3523-f919-4b2d-841a-d18846919370"/>
                                        <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') or
                                                          (node:fallback(../../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../../I2cHwChannel,0),'LPI2C'))"/>
                                        </a:a>
                                        <a:da name="DEFAULT" type="XPath">
                                          <a:tst expr="
                                                    (
                                                      (noderef:value(concat(noderef:ref(node:fallback(../../I2cClockRef, .)),'/McuClockReferencePointFrequency')) div
                                                          (
                                                           (num:i(node:fallback(../I2cClockLowPeriod,3)) + num:i(node:fallback(../I2cClockHighPeriod,1)) + num:i(2)) *
                                                            num:i(substring-after(node:fallback(../../I2cPrescaler,'DIVIDE_BY_1'),'DIVIDE_BY_')) +
                                                            floor((num:i(2)+num:i(node:fallback(../../I2cGlitchFilterSCL,0))) div num:i(substring-after(node:fallback(../../I2cPrescaler,'DIVIDE_BY_1'),'DIVIDE_BY_')))
                                                           )
                                                      )
                                                    )
                                           "/>
                                        </a:da>
                                        <a:a name="RANGE" type="XPath">
                                            <a:tst expr="
                                            (
                                               (node:fallback(../../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                               (contains(node:fallback(../../../I2cHwChannel,0),'LPI2C')) and
                                                not( node:empty( node:fallback(., 1000000) )) and
                                                (
                                                    num:f(node:fallback(., 1000000)) !=
                                                    (
                                                        (noderef:value(concat(noderef:ref(node:fallback(../../I2cClockRef, .)),'/McuClockReferencePointFrequency')) div
                                                        (
                                                        (num:i(node:fallback(../I2cClockLowPeriod,3)) + num:i(node:fallback(../I2cClockHighPeriod,1)) + num:i(2)) *
                                                            num:i(substring-after(node:fallback(../../I2cPrescaler,'DIVIDE_BY_1'),'DIVIDE_BY_')) +
                                                            floor((num:i(2)+num:i(node:fallback(../../I2cGlitchFilterSCL,0))) div num:i(substring-after(node:fallback(../../I2cPrescaler,'DIVIDE_BY_1'),'DIVIDE_BY_')))
                                                        )
                                                        )
                                                    )
                                                )
                                            )"
                                            true="Please press the button to calculate the value automatically."/>
                                        </a:a>
                                        <a:da name="INVALID" type="Range">
                                            <a:tst expr="&gt;=0.0" false="This baud rate is too low."/>
                                            <a:tst expr="&lt;=6000000.0" false="This baud rate is too high."/>
                                        </a:da>
                                      </v:var>
                                    
                                    </v:ctr>
                                  
                                  </v:ctr>
                                  
                                  <v:ctr name="I2cSlaveConfiguration" type="IDENTIFIABLE">
                                    <a:a name="DESC">
                                      <a:v>
                                          <![CDATA[EN:
                                              <html>
                                              This container contains the configuration (parameters) of the Slave Channel.
                                              </html>
                                          ]]>
                                      </a:v>
                                  </a:a>
                                  <a:a name="UUID" value="ECUC:fdac1ad9-1217-44a8-bc3f-641935c20162"/>
                                  <a:a name="LABEL" value="LPI2C Slave configuration"/>
                              
                                    <v:var name="I2cSlaveAddress" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>The address of the slave: Configures LPI2C_SAMR[ADDR0]</p>
                                                 <p>Configures the I2c slave address. </p>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Slave Address" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="UUID" 
                                           value="ECUC:f8d45bee-2afd-48db-a0ef-f1fb7d86cd8b"/>
                                      <a:da name="DEFAULT" value="0"/>
                                      <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'SLAVE_MODE') or
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))"/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=1023"/>
                                        <a:tst expr="&gt;=0"/>
                                      </a:da>
                                    </v:var>
                                    
                                    <v:var name="I2cSlaveDisableFilterInDoze" type="BOOLEAN">
                                      <a:a name="LABEL" value="I2c Disable Slave Filter in Doze mode"/>
                                      <a:a name="DESC">
                                        <a:v>
                                        <![CDATA[EN:
                                            <html>
                                                <p>I2cSlaveDisableFilterInDoze configures LPI2C_SCR[FILTDZ]</p>
                                                <p>Check to disable the filter in Doze mode. Uncheck to have the filters enabled in Doze mode.</p>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                        ]]>
                                         </a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:0474e83e-37f6-4034-ad9a-c481e18c295d"/>
                                      <a:da name="DEFAULT" value="false"/>
                                      <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'SLAVE_MODE') or
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))"/>
                                      </a:a>
                                    </v:var>
                                    
                                    <v:var name="I2cSlaveFilterEnable" type="BOOLEAN">
                                      <a:a name="LABEL" value="I2c Enable Slave Filter"/>
                                      <a:a name="DESC">
                                        <a:v>
                                        <![CDATA[EN:
                                            <html>
                                                <p>I2cSlaveFilterEnable configures LPI2C_SCR[FILTEN]</p>
                                                <p>Check to enable the digital filter and output delay counter for slave mode.</p>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                        ]]>
                                         </a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:76e2e6af-d2eb-4e4d-a60e-7e3e7260f233"/>
                                      <a:da name="DEFAULT" value="false"/>
                                      <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'SLAVE_MODE') or
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))"/>
                                      </a:a>
                                    </v:var>
                                   
                                    <v:var name="I2cSlaveAckStall" type="BOOLEAN">
                                      <a:a name="LABEL" value="I2c Enable ACK SCL Stall"/>
                                      <a:a name="DESC">
                                        <a:v>
                                        <![CDATA[EN:
                                            <html>
                                                <p>I2cSlaveAckStall configures LPI2C_SCFGR1[ACKSTALL]</p>
                                                <p>Enables SCL clock stretching during slave-transmit address byte(s) and slave-receiver address and data byte(s) to allow software to write the Transmit ACK Register before the ACK or NACK is transmitted. </p>
                                                Clock stretching occurs when transmitting the 9th bit and is therefore not compatible with high speed mode.<p/>
                                                When ACKSTALL is enabled, there is no need to set either RXSTALL or ADRSTALL.<p/>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                        ]]>
                                         </a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:281850af-63f9-4c27-8f08-5e1db39b5241"/>
                                      <a:da name="DEFAULT" value="false"/>
                                      <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'SLAVE_MODE') or
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))"/>
                                      </a:a>
                                    </v:var>
                                   
                                    <v:var name="I2cSlaveTxStall" type="BOOLEAN">
                                      <a:a name="LABEL" value="I2c Enable TX Data SCL Stall"/>
                                      <a:a name="DESC">
                                        <a:v>
                                        <![CDATA[EN:
                                            <html>
                                                <p>I2cSlaveAckStall configures LPI2C_SCFGR1[TXSTALL]</p>
                                                <p>Enables SCL clock stretching when the transmit data flag is set during a slave-transmit transfer. </p>
                                                Clock stretching occurs following the 9th bit and is therefore compatible with high speed mode.<p/>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                        ]]>
                                         </a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:3dafe4da-06dd-4f43-84fa-81508caa20fd"/>
                                      <a:da name="DEFAULT" value="false"/>
                                      <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'SLAVE_MODE') or
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))"/>
                                      </a:a>
                                    </v:var>
                                    
                                    <v:var name="I2cSlaveRxStall" type="BOOLEAN">
                                      <a:a name="LABEL" value="I2c Enable RX Data SCL Stall"/>
                                      <a:a name="DESC">
                                        <a:v>
                                        <![CDATA[EN:
                                            <html>
                                                <p>I2cSlaveAckStall configures LPI2C_SCFGR1[RXSTALL]</p>
                                                <p>Enables SCL clock stretching when the receive data flag is set during a slave-receive transfer. </p>
                                                Clock stretching occurs following the 9th bit and is therefore compatible with high speed mode.<p/>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                        ]]>
                                         </a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:13f47fdc-4e45-46b9-88d6-4716707d57f1"/>
                                      <a:da name="DEFAULT" value="false"/>
                                      <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'SLAVE_MODE') or
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))"/>
                                      </a:a>
                                    </v:var>
                                   
                                    <v:var name="I2cSlaveAdrStall" type="BOOLEAN">
                                      <a:a name="LABEL" value="I2c Enable Address SCL Stall"/>
                                      <a:a name="DESC">
                                        <a:v>
                                        <![CDATA[EN:
                                            <html>
                                                <p>I2cSlaveAdrStall configures LPI2C_SCFGR1[ADRSTALL]</p>
                                                <p>Enables SCL clock stretching when the address valid flag is asserted. Clock stretching only occurs following the 9th bit and is therefore compatible with high speed mode. </p>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                        ]]>
                                         </a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:72a8a638-4009-4639-114a-bb5daf863a7b"/>
                                      <a:da name="DEFAULT" value="false"/>
                                      <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'SLAVE_MODE') or
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))"/>
                                      </a:a>
                                    </v:var>
                                   
                                    <v:var name="I2cGlitchFilterSDA" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>Glitch Filter SDA: Configures LPI2C_MCFGR2[FILTSDA]</p>
                                                 Configures the I2c master digital glitch filters for SDA input, a configuration of 0 will disable the glitch filter.<p/>
                                                 Glitches equal to or less than FILTSDA cycles long will be filtered out and ignored. The latency through the glitch filter is equal to FILTSDA cycles and must be configured less than the minimum SCL low or high period.<p/>
                                                 The glitch filter cycle count is not affected by the PRESCALE configuration and is automatically bypassed in High Speed mode. <p/>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Glitch Filter SDA (cycles)" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" 
                                           value="ECUC:1a387772-d6c6-4a1b-a44d-d60fdcca9f89"/>
                                      <a:da name="DEFAULT" value="0"/>
                                      <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'SLAVE_MODE') or
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))"/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=15"/>
                                        <a:tst expr="&gt;=0"/>
                                      </a:da>
                                    </v:var>
                                    
                                    <v:var name="I2cGlitchFilterSCL" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>Glitch Filter SCL: Configures LPI2C_MCFGR2[FILTSCL]</p>
                                                 Configures the I2c master digital glitch filters for SCL input, a configuration of 0 will disable the glitch filter. <p/>
                                                 Glitches equal to or less than FILTSCL cycles long will be filtered out and ignored. The latency through the glitch filter is equal to FILTSCL cycles and must be configured less than the minimum SCL low or high period.<p/>
                                                 The glitch filter cycle count is not affected by the PRESCALE configuration and is automatically bypassed in High Speed mode. <p/>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Glitch Filter SCL (cycles)" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" 
                                           value="ECUC:2b7ecee2-6854-46eb-a08f-5656b5611b63"/>
                                      <a:da name="DEFAULT" value="0"/>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=15"/>
                                        <a:tst expr="&gt;=0"/>
                                      </a:da>
                                      <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'SLAVE_MODE') or
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))"/>
                                      </a:a>
                                    </v:var>
                                
                                    <v:var name="I2cDataValidDelay" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>Data Valid Delay: Configures LPI2C_SCFGR2[DATAVD]</p>
                                                 <p>Configures the SDA data valid delay time for the I2c slave equal to FILTSCL+DATAVD+3 cycles. </p>
                                                 This data valid delay must be configured to less than the minimum SCL low period.<p/>
                                                 The I2c slave data valid delay time is not affected by the PRESCALE configuration, and is disabled in high speed mode.<p/>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Data Valid Delay (cycles)" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" 
                                           value="ECUC:54e99364-8dcb-42c9-b3a4-455c3d3fd393"/>
                                      <a:da name="DEFAULT" value="0"/>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=63"/>
                                        <a:tst expr="&gt;=0"/>
                                      </a:da>
                                      <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'SLAVE_MODE') or
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))"/>
                                      </a:a>
                                      <a:da name="RANGE" type="XPath">
                                          <a:tst expr="( num:i(node:fallback(.,0)) &lt; num:i(0) or num:i(node:fallback(.,0)) &gt; num:i(63))"
                                              true="DATAVD must be between 0 and 63"/>
                                          <a:tst expr="( num:i(node:fallback(.,0)) &lt; (num:i(node:fallback(../I2cGlitchFilterSCL,0))) )"
                                              true="DATAVD must be greater or equal to FILTSCL (i.e. I2cDataValidDelay &gt;= I2cGlitchFilterSCL) ."/>
                                      </a:da>
                                    </v:var>
                                    
                                    <v:var name="I2cClockHoldPeriod" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>Clock Hold Period: Configures LPI2C_SCFGR2[CLKHOLD]</p>
                                                 <p>Minimum number of cycles (minus one) that the SCL clock is driven high by the master.</p>
                                                    Configures the minimum clock hold time for the I2c slave, when clock stretching is enabled. <p/>
                                                    The minimum hold time is equal to CLKHOLD+3 cycles. <p/>
                                                    The I2c slave clock hold time is not affected by the PRESCALE configuration, and is disabled in high speed mode. <p/>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Clock Hold Period (cycles)" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="UUID" 
                                           value="ECUC:988cc0e7-3f77-4bfe-8b38-8f4f02c53376"/>
                                      <a:da name="DEFAULT" value="0"/>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=15"/>
                                        <a:tst expr="&gt;=0"/>
                                      </a:da>
                                      <a:a name="EDITABLE" type="XPath">
                                          <a:tst expr="(
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'SLAVE_MODE') or
                                                          (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_SLAVE_MODE')
                                                       ) and (contains(node:fallback(../../I2cHwChannel,0),'LPI2C'))"/>
                                      </a:a>
                                    </v:var>
                                    
                                  </v:ctr>
                                  
                                  <v:ctr name="I2cFlexIOConfiguration" type="IDENTIFIABLE">
                                      <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:
                                                <html>
                                                This container contains the configuration (parameters) of the Master Configuration.
                                                </html>
                                            ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="UUID" value="ECUC:fdac1ad9-1317-44a8-bc4f-341635a20162"/>
                                    <a:a name="LABEL" value="FlexIO Master configuration"/>
                                    
                                    <!-- @implements I2cAsyncMethod_Object -->
                                    <v:var name="I2cAsyncMethod" type="ENUMERATION">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>Configures the asynchronous mechanism used by the 'AsyncTransmit' function (interrupts or DMA).</p>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c Asynchronous Method" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                    
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:240b6eec-0e3a-4030-9533-5cc2db9bec07"/>
                                      <a:da name="DEFAULT" value="INTERRUPT"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')
                                                     )"/>
                                      </a:a>
                                      <a:da name="RANGE">
                                          <a:v>INTERRUPT</a:v>
                                          <a:v>DMA</a:v>
                                      </a:da>
                                      <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(
                                                (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(.,'INTERRUPT') = 'DMA') and (contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')) and
                                                        (node:fallback(../../../../../GeneralConfiguration/I2cDmaUsed,'false') = 'false')
                                                     )"
                                                     true="The I2cDmaUsed checkbox in GeneralConfiguration must be checked in order to use DMA as an asynchronous method."/>
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(.,'INTERRUPT') = 'DMA') and (contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')) and
                                                        (not(node:exists(../I2cDmaTxChannelRef)))
                                                     )"
                                                     true="A DMA transmission (TX) channel reference must be configured. Refer to I2cFlexIOConfiguration/I2cDmaTxChannelRef."/>
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(.,'INTERRUPT') = 'DMA') and (contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')) and
                                                        (not(node:exists(../I2cDmaRxChannelRef)))
                                                     )"
                                                     true="A DMA receive (RX) channel reference must be configured. Refer to I2cFlexIOConfiguration/I2cDmaRxChannelRef."/>
                                      </a:da>
                                    </v:var>
                                    
                                    <v:ref name="I2cDmaTxChannelRef" type="REFERENCE">
                                      <a:a name="DESC">
                                          <a:v>
                                            <![CDATA[EN: 
                                             <html>
                                                <p>Reference to the DMA TX channel, which is set in the Mcl driver configuration.</p>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                            ]]>
                                        </a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="OPTIONAL" value="true"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="LABEL" value="FlexIO TX DMA Channel"/>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="UUID" value="ECUC:5319eaab-b73b-4ee2-9e88-22e203491b61"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(../I2cAsyncMethod, 'INTERRUPT') = 'DMA') and
                                                        contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')
                                                     )"/>
                                      </a:a>
                                      <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(.,'INTERRUPT') = 'DMA') and (contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')) and
                                                        (node:empty(.))
                                                     )"
                                               true="Field is empty (Suggestion: select a DMAChannel reference)."/>
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(.,'INTERRUPT') = 'DMA') and (contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')) and
                                                        (not(node:refvalid(.)))
                                                     )"
                                               true="Invalid DMAChannel reference (Suggestion: select a DMAChannel reference)."/>
                                      </a:da>
                                      <a:da name="REF" value="ASPathDataOfSchema:/TS_T40D2M10I1R0/Mcl/MclConfigSet/DMAChannel"/>
                                    </v:ref>
                                    
                                    <v:ref name="I2cDmaRxChannelRef" type="REFERENCE">
                                      <a:a name="DESC">
                                          <a:v>
                                            <![CDATA[EN: 
                                             <html>
                                                <p>Reference to the DMA RX channel, which is set in the Mcl driver configuration.</p>
                                                Note: Implementation Specific Parameter. <p/>
                                            </html>
                                            ]]>
                                        </a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="OPTIONAL" value="true"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="LABEL" value="FlexIO RX DMA Channel"/>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="UUID" value="ECUC:5419eaab-b73b-4ee2-9e88-22e203491b61"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(../I2cAsyncMethod, 'INTERRUPT') = 'DMA') and
                                                        contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')
                                                     )"/>
                                      </a:a>
                                      <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(.,'INTERRUPT') = 'DMA') and (contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')) and
                                                        (node:empty(.))
                                                     )"
                                               true="Field is empty (Suggestion: select a DMAChannel reference)."/>
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        (node:fallback(.,'INTERRUPT') = 'DMA') and (contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')) and
                                                        (not(node:refvalid(.)))
                                                     )"
                                               true="Invalid DMAChannel reference (Suggestion: select a DMAChannel reference)."/>
                                      </a:da>
                                      <a:da name="REF" value="ASPathDataOfSchema:/TS_T40D2M10I1R0/Mcl/MclConfigSet/DMAChannel"/>
                                    </v:ref>
                                    
                                    <v:var name="I2cFlexIOSdaPin" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>This configures FLEXIO_SHIFTCTLa[PINSEL]</p>
                                                 Selects which pin is used by the Shifter input or output. PINSEL=i will select the FXIO_Di pin.<p/>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="SDA Pin Select" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="UUID" value="ECUC:2945b501-0f6d-4521-be2f-80331c06180a"/>
                                      <a:da name="DEFAULT" value="0"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')
                                                     )"/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=7"/>
                                        <a:tst expr="&gt;=0"/>
                                      </a:da>
                                      <a:da name="RANGE" type="XPath">
                                          <a:tst expr="( num:i(node:fallback(.,0)) &lt; num:i(0) or num:i(node:fallback(.,0)) &gt; num:i(7))"
                                              true="SDA Pin must be between 0 and 7"/>
                                          <a:tst expr="node:fallback(.,0) = node:fallback(../I2cFlexIOSclPin,1)"
                                              true="SDA Pin must not be used as SDA or SCL pin in any of the configurations."/>
                                      </a:da>
                                    </v:var>
                                    
                                    <v:var name="I2cFlexIOSclPin" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>This configures FLEXIO_TIMCTLa[PINSEL]</p>
                                                 Selects which pin is used by the Timer input or output. PINSEL=i will select the FXIO_Di pin.<p/>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="SCL Pin Select" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="UUID" value="ECUC:5945b501-0f6d-1521-be2f-80331c06180a"/>
                                      <a:da name="DEFAULT" value="1"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')
                                                     )"/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=7"/>
                                        <a:tst expr="&gt;=0"/>
                                      </a:da>
                                      <a:da name="RANGE" type="XPath">
                                          <a:tst expr="( num:i(node:fallback(.,0)) &lt; num:i(0) or num:i(node:fallback(.,0)) &gt; num:i(7))"
                                              true="SDA Pin must be between 0 and 7"/>
                                          <a:tst expr="node:fallback(.,1) = node:fallback(../I2cFlexIOSdaPin,0)"
                                              true="SCL Pin must not be used as SDA or SCL pin in any of the configurations."/>
                                      </a:da>
                                    </v:var>
                                    
                                    <v:var name="I2cFlexIOCompareValue" type="INTEGER">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                 <p>This configures FLEXIO_TIMCMPa[CMP[7:0]]</p>
                                                 This is used to calculate the Baud rate of the I2c. The baud rate divider is equal to (CMP[7:0] + 1) * 2.<p/>
                                                 The divider will be (input_clock + desired_baud_rate) div (2* desired_baud_rate) - 2. The extra -1 is from the timer reset setting used for clock stretching. Round to nearest integer. <p/>
                                                 This must be manually inserted, and the baud rate will be calculated based on it. <p/>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="Timer Compare Value" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="UUID" value="ECUC:5945b501-0f6d-4521-be2f-80331c06180a"/>
                                      <a:da name="DEFAULT" value="8"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')
                                                     )"/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=255"/>
                                        <a:tst expr="&gt;=0"/>
                                      </a:da>
                                    </v:var>
                                    
                                    <!-- @implements I2cBaudRate_Object -->
                                    <v:var name="I2cBaudRate" type="FLOAT">
                                      <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:
                                               <html>
                                                  Considering Timer Compare Value = cmp and Frequency the input frequency of the FlexIO the baud rate is calculated as: <p/>
                                                 <p>Frequency div (2 * cmp + 3)</p>
                                                 Note: Implementation Specific Parameter. <p/>
                                               </html>
                                          ]]>
                                       </a:v>
                                      </a:a>
                                      <a:a name="LABEL" value="I2c FlexIO Baud Rate" />
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="ORIGIN" value="NXP"/>
                                      <a:a name="SCOPE" value="LOCAL"/>
                                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                      <a:a name="UUID" value="ECUC:0a2f04ba-5b60-46bd-92f1-c75db251a488"/>
                                      <a:a name="EDITABLE" type="XPath">
                                        <a:tst expr="(
                                                        (node:fallback(../../I2cMasterSlaveConfiguration, 'MASTER_MODE') = 'MASTER_MODE') and
                                                        contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')
                                                     )"/>
                                      </a:a>
                                      <a:da name="DEFAULT" type="XPath">
                                        <a:tst expr="
                                                    (
                                                      noderef:value(concat(noderef:ref(node:fallback(../../../../I2cFlexIOModuleConfiguration/I2cClockRef, .)),'/McuClockReferencePointFrequency')) div
                                                      ((num:i(node:fallback(../I2cFlexIOCompareValue,8)) * num:i(2)) + num:i(3))
                                                    )
                                        "/>
                                      </a:da>
                                      <a:a name="RANGE" type="XPath">
                                          <a:tst expr="
                                          (
                                              (contains(node:fallback(../../I2cHwChannel,0),'FLEXIO')) and
                                              not( node:empty( node:fallback(., 1000000) )) and
                                              (
                                                  num:f(node:fallback(., 1000000)) !=
                                                  (
                                                    (
                                                      noderef:value(concat(noderef:ref(node:fallback(../../../../I2cFlexIOModuleConfiguration/I2cClockRef, .)),'/McuClockReferencePointFrequency')) div
                                                      ((num:i(node:fallback(../I2cFlexIOCompareValue,8)) * num:i(2)) + num:i(3))
                                                    )
                                                  )
                                              )
                                          )"
                                          true="Please press the button to calculate the value automatically."/>
                                      </a:a>
                                      <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=0.0" false="This baud rate is too low."/>
                                        <a:tst expr="&lt;=6000000.0" false="This baud rate is too high."/>
                                      </a:da>
                                    </v:var>
                                    
                                  </v:ctr>
                                  
                                </v:ctr>
                                
                              </v:lst>
                            
                               <!-- @implements I2cDemEventParameterRefs_Object -->
                               <v:ctr name="I2cDemEventParameterRefs" type="IDENTIFIABLE">
                                 <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                     <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                     <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                 </a:a>
                                 <a:a name="LABEL" value="I2c Dem Event Parameter Refs" />
                                 <a:a name="DESC" 
                                      value="EN: Container for the references to DemEventParameter elements which shall be invoked using the API Dem_ReportErrorStatus API in case the corresponding error occurs. The EventId is taken from the referenced DemEventParameter&apos;s DemEventId value. The standardized errors are provided in the container and can be extended by vendor specific error references."/>
                                 <a:a name="OPTIONAL" value="true"/>
                                 <a:a name="UUID" 
                                      value="ECUC:4c0d3fc1-6d2c-4614-8f58-fa7632263cbb"/>
                                 <!-- @implements I2C_E_TIMEOUT_Object -->
                                 <v:ref name="I2C_E_TIMEOUT_FAILURE" type="SYMBOLIC-NAME-REFERENCE">
                                 <a:a name="LABEL" value="I2c Timeout Dem Error" />
                                   <a:a name="DESC" 
                                        value="EN: Reference to the DemEventParameter which shall be issued when the error &quot;Timeout caused by hardware error&quot; has occured."/>
                                   <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                        type="IMPLEMENTATIONCONFIGCLASS">
                                     <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                     <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                   </a:a>
                                   <a:a name="OPTIONAL" value="true"/>
                                   <a:a name="SCOPE" value="LOCAL"/>
                                   <a:a name="ORIGIN" value="NXP"/>
                                   <a:a name="UUID" 
                                        value="ECUC:111e0a82-ab9f-4c95-879f-b686bbba6c65"/>
                                   <a:da name="INVALID" type="XPath">
                                        <a:tst expr="node:empty(.)" true="Field is empty (Suggestion: select a DemEventParameter reference)."/>
                                        <a:tst expr="node:refvalid(.)" false="Invalid DemEventParameter reference (Suggestion: select a DemEventParameter reference)."/>
                                   </a:da>
                                   <a:da name="REF" 
                                         value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                                 </v:ref>
                               </v:ctr>
                             </v:ctr>

                             <!-- /** @implements CommonPublishedInformation_Object */ -->
                             <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                               <a:a name="DESC">
                                   <a:v>
                                       <![CDATA[EN:<html>
                                           Common container, aggregated by all modules.
                                           It contains published information about vendor and versions.
                                       </html>]]>
                                   </a:v>
                               </a:a>
                               <a:a name="UUID" value="ECUC:acb0123b-4400-4cf6-9048-3b802ed2c756"/>
                               
                               <v:var name="ArReleaseMajorVersion" type="INTEGER_LABEL">
                                   <a:a name="LABEL" value="Ar Release Major Version" />
                                   <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:<html>
                                               Major version number of AUTOSAR specification on which the appropriate implementation is based on. <p/>
                                           </html>]]>
                                       </a:v>
                                   </a:a>
                                   <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                       <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                       <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                   </a:a>
                                   <a:a name="ORIGIN" value="NXP"/>
                                   <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                   <a:a name="SCOPE" value="LOCAL"/>
                                   <a:a name="UUID" value="ECUC:1a61b436-b723-47b1-8f4d-b568b3c77bcf"/>
                                   <a:da name="DEFAULT" value="4"/>
                                   <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=4"/>
                                       <a:tst expr="&lt;=4"/>
                                   </a:da>
                               </v:var>
                               
                               <v:var name="ArReleaseMinorVersion" type="INTEGER_LABEL">
                                   <a:a name="LABEL" value="Ar Release Minor Version" />
                                   <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:<html>
                                               Minor version number of AUTOSAR specification on which the appropriate implementation is based on. <p/>
                                           </html>]]>
                                       </a:v>
                                   </a:a>
                                   <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                       <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                       <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                   </a:a>
                                   <a:a name="ORIGIN" value="NXP"/>
                                   <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                   <a:a name="SCOPE" value="LOCAL"/>
                                   <a:a name="UUID" value="ECUC:6b04c7cc-fcf4-40d5-b589-579f3b691bca"/>
                                   <a:da name="DEFAULT" value="2"/>
                                   <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=2"/>
                                       <a:tst expr="&lt;=2"/>
                                   </a:da>
                               </v:var>
                               
                               <v:var name="ArReleaseRevisionVersion" type="INTEGER_LABEL">
                                   <a:a name="LABEL" value="Ar Release Revision Version" />
                                   <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:<html>
                                               Revision version number of AUTOSAR specification on which the appropriate implementation is based on. <p/>
                                           </html>]]>
                                       </a:v>
                                   </a:a>
                                   <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                       <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                       <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                   </a:a>
                                   <a:a name="ORIGIN" value="NXP"/>
                                   <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                   <a:a name="SCOPE" value="LOCAL"/>
                                   <a:a name="UUID" value="ECUC:856eb3f2-36bf-4d6f-b404-6a874fbbe0e7"/>
                                   <a:da name="DEFAULT" value="2"/>
                                   <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=2"/>
                                       <a:tst expr="&lt;=2"/>
                                   </a:da>
                               </v:var>
                               
                               <v:var name="ModuleId" type="INTEGER_LABEL">
                                   <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:<html>
                                               Module ID of this module from Module List.
                                               Note: Implementation Specific Parameter
                                           </html>]]>
                                       </a:v>
                                   </a:a>
                                   <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                       <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                       <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                   </a:a>
                                   <a:a name="ORIGIN" value="NXP"/>
                                   <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                   <a:a name="SCOPE" value="LOCAL"/>
                                   <a:a name="UUID" value="ECUC:c8d8c033-3334-459e-b45c-705a3ff4887d"/>
                                   <a:da name="DEFAULT" value="255"/>
                                   <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=255"/>
                                       <a:tst expr="&lt;=255"/>
                                   </a:da>
                               </v:var>
                               
                               <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                                   <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:<html>
                                               Major version number of the vendor specific implementation of the module. The numbering is vendor specific.
                                               Note: Implementation Specific Parameter
                                           </html>]]>
                                       </a:v>
                                   </a:a>
                                   <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                       <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                       <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                   </a:a>
                                   <a:a name="ORIGIN" value="NXP"/>
                                   <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                   <a:a name="SCOPE" value="LOCAL"/>
                                   <a:a name="UUID" value="ECUC:9dd0879c-f26b-4ea9-bf0e-013bfa0f4684"/>
                                   <a:da name="DEFAULT" value="1"/>
                                   <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=1"/>
                                       <a:tst expr="&lt;=1"/>
                                   </a:da>
                               </v:var>
                               
                               <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                                   <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:<html>
                                               Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                                               Note: Implementation Specific Parameter
                                           </html>]]>
                                       </a:v>
                                   </a:a>
                                   <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                       <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                       <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                   </a:a>
                                   <a:a name="ORIGIN" value="NXP"/>
                                   <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                   <a:a name="SCOPE" value="LOCAL"/>
                                   <a:a name="UUID" value="ECUC:18ede1df-ceac-4080-a4c8-1eb4cf3cd286"/>
                                   <a:da name="DEFAULT" value="0"/>
                                   <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=0"/>
                                       <a:tst expr="&lt;=0"/>
                                   </a:da>
                               </v:var>
                               
                               <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                                   <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:<html>
                                               Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                                               Note: Implementation Specific Parameter
                                           </html>]]>
                                       </a:v>
                                   </a:a>
                                   <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                       <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                       <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                   </a:a>
                                   <a:a name="ORIGIN" value="NXP"/>
                                   <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                   <a:a name="SCOPE" value="LOCAL"/>
                                   <a:a name="UUID" value="ECUC:f5563407-a9bd-4cae-810d-cf4327c59a77"/>
                                   <a:da name="DEFAULT" value="1"/>
                                   <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=1"/>
                                       <a:tst expr="&lt;=1"/>
                                   </a:da>
                               </v:var>
                               
                               <v:var name="VendorApiInfix" type="STRING_LABEL">
                                   <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:<html>
                                            In driver modules which can be instantiated several times on a single ECU, BSW00347 requires that the name of APIs is extended by the VendorId and a vendor specific name.
                                              This parameter is used to specify the vendor specific name. In total, the Implementation specific name is generated as follows:
                                              &lt;ModuleName&gt;_&gt;VendorId&gt;_&lt;VendorApiInfix&gt;&lt;Api name from SWS&gt;.
                                              E.g. assuming that the VendorId of the implementor is 123 and the implementer chose a VendorApiInfix of "v11r456" a api name
                                              Can_Write defined in the SWS will translate to Can_123_v11r456Write.
                                              This parameter is mandatory for all modules with upper multiplicity &gt;
                                              1. It shall not be used for modules with upper multiplicity =1.
                                              Note: Implementation Specific Parameter
                                           </html>]]>
                                       </a:v>
                                   </a:a>
                                   <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                       <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                       <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                   </a:a>
                                   <a:a name="ORIGIN" value="NXP"/>
                                   <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                   <a:a name="SCOPE" value="LOCAL"/>
                                   <a:a name="UUID" value="ECUC:dd6060f6-7040-4479-a64c-802197382a72"/>
                                   <a:da name="DEFAULT" value=""/>
                               </v:var>
                               
                               <v:var name="VendorId" type="INTEGER_LABEL">
                                   <a:a name="DESC">
                                       <a:v>
                                           <![CDATA[EN:<html>
                                               Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list.
                                               Note: Implementation Specific Parameter
                                           </html>]]>
                                       </a:v>
                                   </a:a>
                                   <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                       <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                       <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                   </a:a>
                                   <a:a name="ORIGIN" value="NXP"/>
                                   <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                   <a:a name="SCOPE" value="LOCAL"/>
                                   <a:a name="UUID" value="ECUC:ccb6488d-97c2-478c-bcc7-3146548af0ef"/>
                                   <a:da name="DEFAULT" value="43"/>
                                   <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=43"/>
                                       <a:tst expr="&lt;=43"/>
                                   </a:da>
                               </v:var>
                               
                             </v:ctr>
     
                        </v:ctr>

                    </d:chc>

                    <d:chc name="I2c_EcuParameterDefinition" type="AR-ELEMENT" value="ECU_PARAMETER_DEFINITION">
                        <d:ctr type="AR-ELEMENT">
                            <a:a name="UUID" value="ECUC:c5d9411f-2fff-545c-8395-901b51b401df"/>
                            <a:a name="DEF" value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
                            <d:lst name="MODULE_REF">
                                <d:ref type="MODULE_REF" value="ASPath:/TS_T40D2M10I1R0/I2c"/>
                            </d:lst>
                        </d:ctr>
                    </d:chc>
                    <d:chc name="I2c_ModuleDescription" type="AR-ELEMENT" value="BSW_MODULE_DESCRIPTION">
                        <d:ctr type="AR-ELEMENT">
                            <a:a name="DEF" value="ASPath:/AR_PACKAGE_SCHEMA/BSW_MODULE_DESCRIPTION"/>
                            <d:var name="MODULE_ID" type="INTEGER" >
                                <a:a name="EDITABLE" value="false"/>
                                <a:a name="IMPORTER_INFO" value="@DEF"/>
                            </d:var>
                            <d:ref type="RECOMMENDED_CONFIGURATION" >
                                <a:a name="EDITABLE" value="false"/>
                                <a:a name="IMPORTER_INFO" value="@DEF"/>
                            </d:ref>
                            <d:ref type="PRE_CONFIGURED_CONF" >
                                <a:a name="EDITABLE" value="false"/>
                                <a:a name="IMPORTER_INFO" value="@DEF"/>
                            </d:ref>
                            <d:ref type="VENDOR_SPECIFIC_MODULE_DEF" value="ASPath:/TS_T40D2M10I1R0/I2c"/>
                        </d:ctr>
                    </d:chc>

                </d:lst>
            </d:ctr>
        </d:lst>
    </d:ctr>
</datamodel>
